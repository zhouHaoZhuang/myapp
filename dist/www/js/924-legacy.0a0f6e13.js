"use strict";(self["webpackChunkdemo"]=self["webpackChunkdemo"]||[]).push([[924],{2924:function(e,t,o){o.r(t),o.d(t,{default:function(){return _}});var n=function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",[o("p",[e._v("我是当前组件的根组件")]),e._m(0),o("router-view")],1)},v=[function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",{staticClass:"dv"},[o("h2",[e._v("完整的导航解析流程")]),o("ol",[o("li",[e._v("导航被触发。")]),o("li",[e._v("在失活的组件里调用 "),o("code",[e._v("beforeRouteLeave")]),e._v(" 守卫。")]),o("li",[e._v("调用全局的 "),o("code",[e._v("beforeEach")]),e._v(" 守卫。")]),o("li",[e._v("在重用的组件里调用 "),o("code",[e._v("beforeRouteUpdate")]),e._v(" 守卫 (2.2+)。")]),o("li",[e._v("在路由配置里调用 "),o("code",[e._v("beforeEnter")]),e._v("。")]),o("li",[e._v("解析异步路由组件。")]),o("li",[e._v("在被激活的组件里调用 "),o("code",[e._v("beforeRouteEnter")]),e._v("。")]),o("li",[e._v("调用全局的 "),o("code",[e._v("beforeResolve")]),e._v(" 守卫 (2.5+)。")]),o("li",[e._v("导航被确认。")]),o("li",[e._v("调用全局的 "),o("code",[e._v("afterEach")]),e._v(" 钩子。")]),o("li",[e._v("触发 DOM 更新。")]),o("li",[e._v(" 调用 "),o("code",[e._v("beforeRouteEnter")]),e._v(" 守卫中传给 "),o("code",[e._v("next")]),e._v(" 的回调函数，创建好的组件实例会作为回调函数的参数传入。 ")])])])}],i=o(5972),r={name:"routersTest",props:{id:{},text:{}},mounted:function(){console.log(this.$props,"this.$props  a",this.$attrs,"this.$attrs  a"),console.log(this.$route,"this.$route   a"),console.log(this.id,"this.id   a",this.text,"this.text   a")},beforeRouteEnter:function(e,t,o){o((function(e){console.log(e,"vm")})),(0,i.Z)("/data.json",{parmes:12}).then((function(e){o((function(t){console.log(t,e,"vm0000000000")}))})),console.log(e.matched[0].meta,t,"beforeRouteEnter------"),o()},beforeRouteUpdate:function(e,t,o){o()},beforeRouteLeave:function(e,t,o){o()}},l=r,s=o(1001),c=(0,s.Z)(l,n,v,!1,null,null,null),_=c.exports}}]);